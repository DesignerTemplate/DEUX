// storyboard.js
import * as React from 'react'
import { Scene, Storyboard } from 'utopia-api'

export const App = () => {
  return (
    <div style={styles.container}>
      <p>
        <strong>DeuxOS posits:</strong>
      </p>
      <ul>
        <li>
          <strong>Duality (Axiom 0):</strong> Every numeric
          object arises from recursive dual-anchored
          polarity.
        </li>
        <li>
          <strong>Descent (Axiom 1):</strong> Numeric
          objects are recursively constructed via the
          constructor.
        </li>
        <li>
          <strong>Desire (Axiom 2):</strong> Numeric
          increments occur via dual polarity-balanced
          recursive transfers.
        </li>
      </ul>
      <h2>Formal Structural Proof of Benford’s Law</h2>
      <h1>DeuxOS Structural Axioms (Summary)</h1>
      <h3>Step 1: Recursive Numeric Construction</h3>
      <p>
        Every numeric value <em>x</em> in DeuxOS is
        explicitly constructed via:
      </p>
      <h3>Step 2: Structural Complexity and Magnitude</h3>
      <p>
        Define lineage depth L(x) of numeric value{' '}
        <em>x</em> as the number of recursive transfers
        required to construct x:
        <br />
        <code>L(x) ∝ log₂(x)</code>
      </p>
      <p>
        Thus, numeric magnitude grows exponentially with
        recursion depth.
      </p>
      <h3>Step 3: Probability and Structural Recursion</h3>
      <p>
        Numeric values are uniformly distributed in lineage
        recursion steps.
        <br />
        Therefore, the probability of encountering a numeric
        object with leading digit <em>d</em> equals the
        relative structural "lineage time" spent between and
        across all magnitudes <em>k</em>:
      </p>
      <p>Simplifying, the sum telescopes neatly to:</p>
      <h3>Step 4: Interpretation within DeuxOS Duality</h3>
      <p>This result occurs explicitly due to:</p>
      <ul>
        <li>
          Recursive structural lineage (numeric values spend
          proportionally more lineage depth in lower digit
          magnitudes).
        </li>
        <li>
          Polarity-balanced recursion (each numeric
          increment is duality-resolved, enforcing
          logarithmic density structurally).
        </li>
      </ul>
      <h2>Conclusion</h2>
      <p>
        We have formally proven that Benford’s Law naturally
        arises from the duality-based, recursively-typed
        numeric construction axioms of DeuxOS. This shifts
        Benford’s Law from empirical curiosity into
        structural inevitability, grounded explicitly in a
        formal recursive ontological system.
      </p>
    </div>
  )
}

const styles = {
  container: {
    fontFamily: 'sans-serif',
    padding: 40,
    lineHeight: 1.6,
    color: '#333',
    maxWidth: 800,
  },
}

export var storyboard = (
  <Storyboard>
    <Scene
      style={{
        width: 800,
        height: 1200,
        position: 'absolute',
        left: 100,
        top: 100,
      }}
      commentId='358730e488c73cbdd23fee371b6d93b1'
    >
      <App />
    </Scene>
  </Storyboard>
)
